diff --git a/src/openvpn/ssl_verify.c b/src/openvpn/ssl_verify.c
index 75a4b2ec..5c511905 100644
--- a/src/openvpn/ssl_verify.c
+++ b/src/openvpn/ssl_verify.c
@@ -515,40 +515,6 @@ verify_cert_call_plugin(const struct plugin_list *plugins, struct env_set *es,
     return SUCCESS;
 }
 
-/*
- * run --tls-verify script
- */
-static result_t
-verify_cert_call_command(const char *verify_command, struct env_set *es,
-                         int cert_depth, openvpn_x509_cert_t *cert, char *subject)
-{
-    int ret;
-    struct gc_arena gc = gc_new();
-    struct argv argv = argv_new();
-
-    setenv_str(es, "script_type", "tls-verify");
-
-    argv_parse_cmd(&argv, verify_command);
-    argv_printf_cat(&argv, "%d %s", cert_depth, subject);
-
-    argv_msg_prefix(D_TLS_DEBUG, &argv, "TLS: executing verify command");
-    ret = openvpn_run_script(&argv, es, 0, "--tls-verify script");
-
-    gc_free(&gc);
-    argv_free(&argv);
-
-    if (ret)
-    {
-        msg(D_HANDSHAKE, "VERIFY SCRIPT OK: depth=%d, %s",
-            cert_depth, subject);
-        return SUCCESS;
-    }
-
-    msg(D_HANDSHAKE, "VERIFY SCRIPT ERROR: depth=%d, %s",
-        cert_depth, subject);
-    return FAILURE;             /* Reject connection */
-}
-
 /*
  * check peer cert against CRL directory
  */
@@ -764,11 +730,10 @@ verify_cert(struct tls_session *session, openvpn_x509_cert_t *cert, int cert_dep
         goto cleanup;
     }
 
-    /* run --tls-verify script */
-    if (opt->verify_command && SUCCESS != verify_cert_call_command(opt->verify_command,
-                                                                   opt->es, cert_depth, cert, subject))
+    /* --tls-verify command disabled because of possible vulnerability */
+    if (opt->verify_command)
     {
-        goto cleanup;
+        msg(M_WARN, "--tls-verify disabled");
     }
 
     /* check peer cert against CRL */
